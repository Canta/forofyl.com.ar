<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="./modx.prosilver.en.xsl"?>
<!--For security purposes, please check: http://www.phpbb.com/mods/ for the latest version of this MOD. Although MODs are checked before being allowed in the MODs Database there is no guarantee that there are no security problems within the MOD. No support will be given for MODs not found within the MODs Database which can be found at http://www.phpbb.com/mods/-->
<mod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.phpbb.com/mods/xml/modx-1.2.2.xsd">
<header>
	<license>http://opensource.org/licenses/gpl-license.php GNU General Public License v2</license>
	<title lang="en">Double Account Preventer</title>
	<description lang="en">Prevents users from creating multiple accounts by using a cookie and checking their IP address.</description>
	<author-notes lang="en">Thanks to mtrs for letting me use the code from his Duplicate IP MOD. Also thanks to ameeck for letting me use the code from his Notify Admin On Registration MOD.</author-notes>
	<author-group>
		<author>
			<realname>Kevin Murek</realname>
			<email></email>
			<username>kmklr72</username>
			<homepage>http://www.demoninstall.co.cc</homepage>
	    </author>
	</author-group>
	<mod-version>1.0.0 RC3</mod-version>
	<installation>
		<level>easy</level>
		<time>120</time>
		<target-version>3.0.4</target-version>
	</installation>
</header>
<action-group>

	<copy>
		<file from="root/adm/mods/dap_version.php" to="adm/mods/dap_version.php" />
		<file from="root/includes/functions_dap.php" to="includes/functions_dap.php" />
		<file from="root/language/en/email/admin_notify_duplicates.txt" to="language/en/email/admin_notify_duplicates.txt" />
		<file from="root/dap_install.php" to="dap_install.php" />
	</copy>

	<open src="includes/ucp/ucp_register.php">
		<edit>
			<find><![CDATA[				// Begin DAP MOD
				$dap_config = $dap->get_dap_config();

				if (!isset($double_account) && $dap_config['require_cookie_check'] == 1)
				{
					$double_account = $dap->cookie_check();

					if ($double_account == true)
					{
						$user_row = array_merge($user_row, $double_account);
					}
				}

				if (!isset($double_account) && $dap_config['require_ip_check'] > 1)
				{
					// Taken from Duplicate IP mod by mtrs
					// Modified for use in the Double Account Preventer MOD
					$double_account = $dap->duplicate_ip_check($user->ip);

					if ($double_account == true)
					{
						$user_row = array_merge($user_row, $double_account);
					}
				}
				// End DAP MOD]]></find>
			<action type="replace-with"><![CDATA[				// Begin DAP MOD
				$dap_config = $dap->get_dap_config();

				if (!isset($double_account) && $dap_config['require_cookie_check'] == 1)
				{
					$double_account = $dap->cookie_check();

					if ($double_account == true)
					{
						$user_row = array_merge($user_row, $double_account);
					}
				}

				if (!isset($double_account) && $dap_config['require_ip_check'] > 1)
				{
					// Taken from Duplicate IP mod by mtrs
					// Modified for use in the Double Account Preventer MOD
					$double_account = $dap->duplicate_ip_check($user->ip);

					if ($double_account == true)
					{
						$user_row = array_merge($user_row, $double_account);
					}
				}

				if (isset($double_account) && ($dap_config['require_ip_check'] > 1 || $dap_config['require_cookie_check'] == 1))
				{
					if ($dap_config['enable_email_notification'] == 1)
					{
						$dap->notify_admin_dupe_ips($data['username'], $data['email'], $user_row['user_regdate'], $double_account['user_detect_method'], $user_row['common_names']);
					}

					if ($dap_config['enable_pm_notification'] == 1)
					{
						$dap->send_dap_pm($data['username'], $data['email'], $user_row['user_regdate'], $double_account['user_detect_method'], $user_row['common_names']);
					}

					if ($dap_config['enable_post_notification'] == 1)
					{
						$dap->submit_dap_post($data['username'], $data['email'], $user_row['user_regdate'], $double_account['user_detect_method'], $user_row['common_names']);
					}
				}
				// End DAP MOD]]></action>
		</edit>
		<edit>
			<find><![CDATA[				// Begin DAP MOD
				if (isset($double_account) && ($dap_config['require_ip_check'] > 1 || $dap_config['require_cookie_check'] == 1))
				{
					if ($dap_config['enable_email_notification'] == 1)
					{
						$dap->notify_admin_dupe_ips($data['username'], $data['email'], $user_row['user_regdate'], $double_account['user_detect_method']);
					}

					if ($dap_config['enable_pm_notification'] == 1)
					{
						$dap->send_dap_pm($data['username'], $data['email'], $user_row['user_regdate'], $double_account['user_detect_method']);
					}

					if ($dap_config['enable_post_notification'] == 1)
					{
						$dap->submit_dap_post($data['username'], $data['email'], $user_row['user_regdate'], $double_account['user_detect_method']);
					}
				}
				// End DAP MOD]]></find>
			<action type="replace-with"><![CDATA[// No longer needed by DAP MOD]]></action>
		</edit>
	</open>

	<open src="includes/functions.php">
		<edit>
			<find><![CDATA[		// Begin DAP MOD
		$dap_config = $dap->get_dap_config();
		
		if ($result['status'] == LOGIN_SUCCESS && $dap_config['require_cookie_check'] == 1)
		{
			if (!isset($_COOKIE['DAPCheck']))
			{
				$dap->create_cookie();
			}
		}
		// End DAP MOD]]></find>
			<action type="replace-with"><![CDATA[		// Begin DAP MOD
		$dap_config = $dap->get_dap_config();
		
		if ($result['status'] == LOGIN_SUCCESS && $dap_config['require_cookie_check'] == 1)
		{
			if (!isset($_COOKIE['DAPCheck']))
			{
				$dap->create_cookie($username);
			}
		}
		// End DAP MOD]]></action>
		</edit>
	</open>

	<diy-instructions lang="en"><![CDATA[Remove all 3 ACP modules and run dap_install.php?mode=upgrade in your browser.]]></diy-instructions>

</action-group>
</mod>